	Phyton введение:

* Типы данных:
  a = 1 # записать в переменную а число 1
  a = 'text'
  a = True
  a = False # булевые переменные

* Ввод, вывод данных:
  print() # вывести текст или значение переменной
  input() # получить значение из консоли

* Методы:
  a / b # при делении всегда будем получать число с плавающей точкой
  abs(n) # модуль числа n
  min(m,n) # вернуть наименьшее число
  max(m,n) # вернуть наибольшее число
  a ** b # возвести в степень основание а в степень b
  a // b # целочисленное деление округление к низу
  a % b # остаток от деления
  round(a, n) # округлить число а до n-го знака после запятой
  a | b # побитовое или, переводит числа a и b в десятичные числа, на данные а накладывается маска b, 1 маски b меняют выходные            # данные 0 на 1
  str(1) # привести данные к строке
  int('2') # привести данные к целому числу

* Сравнение:
  == # Равно
  != # Не равно
  >= # Больше равно
  <= # Меньше равно

* Логические операторы по приоритету:
  and
  or
  not

* Ветвление:
  if a > b :
      print('a>b') # блоки программы выделяются отпсупами
  elif a == b :
      print('a=b')
  else :
      print('a<b')

  * Тернарный оператор:
    c = b if a > b else 1

* Циклы:
  while a < b : # Цикл while будет выполнятся пока True
  	print(a)
  	a +=1

  for i in range(start,finish,step): # range(число начала включительно, число конца не включительно, шаг)
  	print(i) 
  for i in 'text':
  	print(i)

  continue # продолжить выполнения цыкла дальше, не закончив итерацию
  break # прервать цикл

* Импорт модуля
  
  import math # импорт из внешнего файла
  math.floor(3,6) # обращение к функции через имья модуля
  math.ceil(3,2)

  from math import log, exp # С модуля math импортировать ф-ции log и exp

  from math import e as exp_const # Импорт и просвоение имени
  print( log( exp_const ** 10 ), log( exp(10) ) )

* Строки:

  'abc' + '123' # сложить(конкатинировать) строки
  'abc' * 3     # 'abcabcabc' добавить строку саму к себе n раз
  'abc' += '123' # прибавить к строке abc строку 123
  a = (
      'phyton'
      ' is'
      ' really'
      ' exciting'
  )  # вывод будет одной строкой 'phyton is really exciting'
  print( a[0] ) # вывод будет символ 'p', тоесть первый элемент строки
  print( a[0:5] # вывести диапазон символов с 0-го по 5-ый не включительно
  len(str) # возвращает длину строки str
  
  for i in str[0:5:1]: # Цикл для строки, 0-с символа, 5- по не 
  	print(i)       # включительно, 1-шаг
  'abc' in 'abc 123'   # возвращает true или false
  'abc 123'.split(' ') # разбить строку по определенномму символу
  'abc 123'.replace('123','456') # замена
  'abc'.lower() # привести к нижнему регистру
  'abc'.upper() # привести к верхнему регистру
  'abc'.islower() # возвращает True если строка в нижнем регистре
  'abc 123'.find('1') # возвращает индекс первого найденого символа
* Форматирование строк:
  print('Hello %s %d'%( 'world',123 ))
  print('Hello {} {}'.format( 'world', 123 )) # Способы вставки втекст данных
  var1='world'
  var2=123
  print(f'Hello', var1, var2)
* Формтаирование чисел:
  f- 
  e- экспоненциальный формат
  g- научный формат
  # :fill align sign #  0 width sep .precision type
  print(f'number{3:+}, and number{-3:+}') # выводить знак числа
  print(f'number{3:-}, and number{-3:-}') # выведет только -
  print(f'{10000:,}') # вывести число с разделителем запятая
  print(f'{1:$=+3}') # вывести 3-значное число добавив спереди (после знака +) $
  print(f'{1:$<3}') # добавить справа $
  print(f'{1:0>3}') # добавить слева $
  print(f'{1:+03}') # добавить ноли и знак
  # b - binary, 0 - octal, x(X) - hex, #-special mod(add 0b,0o,0x or 0X to start
  print(f'{13:b}')
  print(f'{2.234:.nf}') # n - количество знаков после запятой
  print(f'{1.222:$>10.2f}')

* Колекции данных:
 Список:
  a = []
  a = list() # Создать список
  a = [1,2,3,4,'abc']
 Кортеж:
  b = ()
  b = tuple()
  b = (1,2,3,'abc')
 # Для списков и кортежей рабоют методы для строк len и a.[]
   a.[-len] вывод с конца 
  

